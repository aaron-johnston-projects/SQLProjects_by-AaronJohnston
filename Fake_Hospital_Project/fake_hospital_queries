
/* The following queries are related to the data project that uses the tables 'fake_patients', 'fake_doctors', 'fake_admissions', and 'states_table'. */

/* Want to check all patients that are Female and show only their first and last name? Use the following query */
SELECT
  [first_name],
  [last_name],
  [gender]
FROM fake_patients
WHERE gender is 'F';

/* Want to check all patients that do not have allergies in this table? Use the following query */
SELECT
  [first_name],
  [last_name]
FROM patients
WHERE allergies IS NULL;

/* Want to check all patients where their first name begins with the letter "D"? Use the following query */
SELECT [first_name]
FROM fake_patients
WHERE first_name LIKE 'D%';

/* Want to update all patients that don't have allergies with 'NKA' (No Known Allergy)? Use the following query */
UPDATE fake_patients
SET allergies = 'NKA'
WHERE allergies IS NULL;

/* If you want to combine the first and last name of patients into a full name column, use the following query */
SELECT
  CONCAT(first_name, ' ', last_name) as full_name
FROM fake_patients;

/* If you want to show the patient's names with the states full name instead of the abbreviation, then you'll want to pull the data from a separate table by utilizing a INNER JOIN. */
SELECT
  first_name,
  last_name,
  state_name
FROM fake_patients
  INNER JOIN state_name ON fake_patients.state_id = states_table.state_id;

/* If you want to count the number of patients that are born within a specific year, you'd use the following.
SELECT COUNT(*)
FROM fake_patients
WHERE YEAR(birth_date) is 2010;

/* If you want to show the patient's first and last name that's the tallest, use the following query. */
SELECT
  first_name,
  last_name,
  MAX (height)
FROM fake_patients;

/* If you'd like to see patients with a specific patient_id, use the following query, just replace the value with the actual patient_id. */
SELECT *
FROM fake_patients
WHERE
  patient_id = value1
  OR patient_id = value2
  OR patient_id = value3
  OR patient_id = value4
  OR patient_id = value5;

/* If you want to see the number of admissions all together, use the following query. */
SELECT COUNT(*)
FROM fake_admissions;

/* If you'd like to see whom was admitted and discharged on the same day, use the following query. */
SELECT *
FROM fake_admissions
WHERE admission_date = discharge_date;

/* If you'd like to see the number of times a specific patient was admitted, use the following query. Just replace the value with the actual patient_id. */
SELECT
  patient_id,
  COUNT(*)
FROM fake_admissions
WHERE patient_id = value1;

/* If you'd like to see the distinct cities in a specific state, use the following query. Just replace the value with the actual state. */
SELECT DISTINCT city
FROM fake_patients
where state = value1;

/* If you'd like to view the patients that are over a specific height and weigh more than a specific number use the following query. This will only show the first name, last name, and birthdate of those patients.
If you'd like to select different columns, then replace the current columns with the desired columns. In addition, replace the value with the actual state. */
SELECT
  first_name,
  last_name,
  birth_date
FROM fake_patients
WHERE height > value1 AND weight > value2;

/* If you're wanting to view the patient's first and last name that have no allergies from a specific city, then use the following query. Replace the values with the actual city. */
SELECT
  first_name,
  last_name,
  allergies
FROM fake_patients
WHERE
  city = value1
  AND allergies IS NOT NULL;

/* If you'd like to see the unique cities in ascending order that start with a vowel (a, e, i, o, u), use the following query. */
SELECT DISTINCT city
FROM fake_patients
WHERE
  city like 'a%'
  or city LIKE 'e%'
  OR city LIKE 'i%'
  OR city LIKE 'o%'
  OR city LIKE 'u%'
order by city ASC;

/* If you'd like to see the unique birth years of the patients and order them by ascending enter the following query. */
SELECT DISTINCT YEAR(birth_date)
FROM fake_patients
ORDER BY birth_date ASC;

/* If you want to show unique first names from the fake_patients table which only occurs once in the list. Use one of the following queries. */
/*Query 1*/
SELECT first_name
FROM fake_patients
GROUP BY first_name
HAVING COUNT(first_name) = 1

/*Query 2*/
SELECT first_name
FROM (
    SELECT
      first_name,
      count(first_name) AS occurrencies
    FROM fake_patients
    GROUP BY first_name
  )
WHERE occurrencies = 1

/* If you want to show patient_id and first_name from patients where their first_name start and ends with a letter and is at least a certain characters long. Use one of the following queries. The letter that is being used in these examples is 's'
 and the length of characters is 6.*/
/*Query 1*/
SELECT
  patient_id,
  first_name
FROM fake_patients
WHERE first_name LIKE 's____%s';

/*Query 2*/
SELECT
  patient_id,
  first_name
FROM fake_patients
WHERE
  first_name LIKE 's%s'
  AND len(first_name) >= 6;

/*Query 3*/
SELECT
  patient_id,
  first_name
FROM fake_patients
where
  first_name like 's%'
  and first_name like '%s'
  and len(first_name) >= 6;

/* If you want to show all of the patients grouped into weight groups.
Show the total amount of patients in each weight group.
Order the list by the weight group decending.

For example, if they weight 100 to 109 they are placed in the 100 weight group, 110-119 = 110 weight group, etc. 

Use one of the following queries.*/

/*Query 1*/
SELECT
  COUNT(*) AS patients_in_group,
  FLOOR(weight / 10) * 10 AS weight_group
FROM fake_patients
GROUP BY weight_group
ORDER BY weight_group DESC;

/*Query 2*/
SELECT
  TRUNCATE(weight, -1) AS weight_group,
  count(*)
FROM fake_patients
GROUP BY weight_group
ORDER BY weight_group DESC;

/*Query 3*/
SELECT
  count(patient_id),
  weight - weight % 10 AS weight_group
FROM fake_patients
GROUP BY weight_group
ORDER BY weight_group DESC

/* If you want to show patient_id, weight, height, isObese from the patients table. Display isObese as a boolean 0 or 1. Obese is defined as weight(kg)/(height(m)2) >= 30.
weight is in units kg. height is in units cm. Use the following query. */
SELECT patient_id, weight, height, 
  (CASE 
      WHEN weight/(POWER(height/100.0,2)) >= 30 THEN
          1
      ELSE
          0
      END) AS isObese
FROM fake_patients;

/* If you want to show patient_id, first_name, last_name, and attending doctor's specialty and show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa'. In addition, you want to 
check patients, admissions, and doctors tables for required information. Use the following query. */
SELECT
  p.patient_id,
  p.first_name AS patient_first_name,
  p.last_name AS patient_last_name,
  ph.specialty AS attending_doctor_specialty
FROM fake_patients p
  JOIN fake_admissions a ON a.patient_id = p.patient_id
  JOIN fake_doctors ph ON ph.doctor_id = a.attending_doctor_id
WHERE
  ph.first_name = 'Lisa' and
  a.diagnosis = 'Epilepsy'

/* Let's say that all patients who have gone through admissions, can see their medical documents on our site. Those patients are given a temporary password after their first admission. If you want to show the patient_id and temp_password.

Let's also say that you want to have the data as:
The password must be the following, in order:
1. patient_id
2. the numerical length of patient's last_name
3. year of patient's birth_date

Use the following query. */
SELECT
  DISTINCT P.patient_id,
  CONCAT(
    P.patient_id,
    LEN(last_name),
    YEAR(birth_date)
  ) AS temp_password
FROM fake_patients P
  JOIN fake_admissions A ON A.patient_id = P.patient_id;

